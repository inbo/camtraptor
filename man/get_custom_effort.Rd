% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_custom_effort.R
\name{get_custom_effort}
\alias{get_custom_effort}
\title{Get custom effort}
\usage{
get_custom_effort(x, start = NULL, end = NULL, group_by = NULL, unit = "hour")
}
\arguments{
\item{x}{Camera trap data package object, as returned by
\code{\link[camtrapdp:read_camtrapdp]{camtrapdp::read_camtrapdp()}}.}

\item{start}{Start date. Default: \code{NULL}. If \code{NULL} the earliest start date
among all deployments is used. If \code{group_by} unit is not \code{NULL}, the lowest
start value allowed is one group by unit before the start date of the
earliest deployment. If this condition doesn't hold true, a warning is
returned and the earliest start date among all deployments is used. If
\code{group_by} unit is \code{NULL} the start must be later than or equal to the
start date among all deployments.}

\item{end}{End date. Default: \code{NULL}. If \code{NULL} the latest end date among all
deployments is used. If \code{group_by} unit is not \code{NULL}, the latest end value
allowed is one group by unit after the end date of the latest deployment.
If this condition doesn't hold true, a warning is returned and the latest
end date among all deployments is used. If \code{group_by} unit is \code{NULL} the
end must be earlier than or equal to the end date among all deployments.}

\item{group_by}{Character, one of \code{"day"}, \code{"week"}, \code{"month"}, \code{"year"}. The
effort is calculated at the interval rate defined in \code{group_by}. Default:
\code{NULL}: no grouping, i.e. the entire interval from \code{start} to \code{end} is
taken into account as a whole. Calendar values are used, i.e. grouping by
year will calculate the effort from Jan 1st up to Dec 31st for each year.}

\item{unit}{Character, the time unit to use while returning custom effort.
One of: \code{hour} (default), \code{day}.}
}
\value{
A tibble data frame with following columns:
\itemize{
\item \code{deploymentID}: Deployment unique identifier.
\item \code{locationName}: Location name of the deployments.
\item \code{begin}: Begin date of the interval the effort is calculated over.
\item \code{effort}: The effort as number.
\item \code{unit}: Character specifying the effort unit.
}
}
\description{
Gets the effort for each deployment and a specific time interval such as day,
week, month or year. A custom time window can also be set up. This function
calls \code{camtrapR_cameraOperation()} internally.
}
\examples{
x <- example_dataset()

# Effort for each deployment over the entire duration of the project (Camera Trap Data
# Package) measured in hours (default)
get_custom_effort(x)

# Effort for each deployment expressed in days
get_custom_effort(x, unit = "day")

# Effort for each deployment from a specific start to a specific end
get_custom_effort(
  x,
  start = as.Date("2019-12-15"), # or lubridate::as_date("2019-12-15")
  end = as.Date("2021-01-10")
)

# Effort at daily interval
get_custom_effort(x, group_by = "day")

# Effort at weekly interval
get_custom_effort(x, group_by = "week")

# Effort at monthly interval
get_custom_effort(x, group_by = "month")

# Effort at yearly interval
get_custom_effort(x, group_by = "year")

# You can afterwards calculate the total effort over all deployments
library(dplyr)
get_custom_effort(x, group_by = "year", unit = "day") \%>\%
  dplyr::filter(effort > 0) \%>\%
  dplyr::group_by(begin) \%>\% 
  dplyr::summarise(
    deploymentIDs = list(deploymentID),
    locationNames = list(locationName),
    ndep = length(unique(deploymentID)),
    nloc = length(unique(locationName)),
    effort = sum(effort),
    unit = unique(unit)
  )
}
\seealso{
Other exploration functions: 
\code{\link{get_effort}()},
\code{\link{get_n_individuals}()},
\code{\link{get_n_obs}()},
\code{\link{get_rai}()},
\code{\link{get_rai_individuals}()},
\code{\link{get_scientific_name}()},
\code{\link{get_species}()},
\code{\link{n_species}()}
}
\concept{exploration functions}
