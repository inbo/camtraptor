% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_detection_history.R
\name{get_detection_history}
\alias{get_detection_history}
\title{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}}
\usage{
get_detection_history(
  recordTable,
  camOp,
  species,
  output,
  occasionLength = 1,
  minActiveDaysPerOccasion = NULL,
  maxNumberDays = NULL,
  day1 = "station",
  buffer = NULL,
  unmarkedMultFrameInput = FALSE
)
}
\arguments{
\item{recordTable}{A data frame with the camera trap records. The data frame
should contain the columns 'Station', 'Date', 'Species' and 'n'. 'Station'
is the camera station ID, 'Date' is the date of the record, 'Species' is
the species name, 'n' is the number of observations, and 'n_ind' is the
number of individuals detected.}

\item{camOp}{A matrix with camera operation data. Rows represent camera
stations and columns represent occasions. The matrix should contain the
number of days that each station was active on each occasion.}

\item{species}{Character. The species name.}

\item{output}{Character. The type of output. Choose one of: \code{"binary"},
\code{"n_observations"}, \code{"n_individuals"}.}

\item{occasionLength}{Integer. The length of the occasions in days. No
decimals allowed. Default: \code{1}.}

\item{minActiveDaysPerOccasion}{Integer. Minimum number of active trap days
for occasions to be included. Default: \code{NULL}. If used, it must be smaller
than or equal to \code{occasionLength}.}

\item{maxNumberDays}{Integer. Maximum number of trap days per station.
Default: \code{NULL}. If used, it must be greater than or equal to
\code{occasionLength}.}

\item{day1}{Character. Day occasions should begin: station setup date
(\code{"station"}) or a specific date (e.g. \code{"2015-12-31"}). For multi-season
detection history (\code{unmarkedMultFrameInput} = \code{TRUE}), only \code{day1} =
\code{"station"} is allowed. Default: "station".}

\item{buffer}{Integer. It makes the first occasion begin a number of days
after station setup. \code{buffer} can be used only in combination with \code{day1} =
\code{"station"}. Default: \code{NULL}. A warning is returned if some records are
removed because taken during the buffer period.}

\item{unmarkedMultFrameInput}{Logical. If \code{TRUE}, the function will return the input for multi-season occupancy models in unmarked R package (argument \code{y} in \code{\link[unmarked:unmarkedMultFrame]{unmarked::unmarkedMultFrame()}}). Default: \code{FALSE}.}
}
\value{
A list with three elements:
\itemize{
\item \code{detection_history}: the detection history matrix
\item \code{effort}: the effort matrix
\item \code{dates}: the dates matrix
}
}
\description{
This function is deprecated. Please use \code{\link[=camtrapR_detectionHistory]{camtrapR_detectionHistory()}}
instead.
}
\details{
The detection history matrix is
a binary matrix where rows represent camera stations and columns represent
occasions. The matrix is filled with 1s and 0s, where 1 indicates that the
species was detected at a station on a given occasion and 0 indicates that
the species was not detected. The function also returns the effort matrix,
which contains the number of days that each station was active on each
occasion, and the dates matrix, which contains the dates of the occasions.

This function doesn't take as input a camera trap data package object, but a
camera operation matrix and a record table, which are both calculated based
on a camera trap data package object. For more information, see the
\code{\link[=camtrapR_cameraOperation]{camtrapR_cameraOperation()}} and \code{\link[=camtrapR_recordTable]{camtrapR_recordTable()}} functions.

If the camera operation matrix (\code{camOp}) was created for a multi-season study (via argument \code{session_col} in \code{camtrapR_cameraOperation()}), the session will be detected automatically. You can then set \code{unmarkedMultFrameInput} = \code{TRUE} to generate a multi-season detection history. Each row corresponds to a site, and the columns are in season-major, occasion-minor order, e.g. \code{o1_SESS_A}, \code{o2_SESS_A}, \code{o1_SESS_B}, \code{o2_SESS_B}, etc.
}
\examples{
library(dplyr)
x <- example_dataset()

camOp <- camtrapR_cameraOperation(x)
recordTable <- camtrapR_recordTable(x)

# Binary output
camtrapR_detectionHistory(
  recordTable,
  camOp,
  species = "Anas platyrhynchos",
  output = "binary"
)

# Number of observations output
camtrapR_detectionHistory(
 recordTable,
 camOp,
 species = "Anas platyrhynchos",
 output = "n_observations"
)
 
# Number of individuals output
camtrapR_detectionHistory(
 recordTable,
 camOp,
 species = "Anas platyrhynchos",
 output = "n_individuals"
)

# Occasion length of 7 days
camtrapR_detectionHistory(
 recordTable,
 camOp,
 species = "Anas platyrhynchos",
 output = "n_individuals",
 occasionLength = 7
)

# Use a `minActiveDaysPerOccasion` of 5 days
camtrapR_detectionHistory(
 recordTable,
 camOp,
 species = "Anas platyrhynchos",
 output = "n_individuals",
 occasionLength = 7,
 minActiveDaysPerOccasion = 5
)

# Use a `maxNumberDays` of 5 days
camtrapR_detectionHistory(
 recordTable,
 camOp,
 species = "Anas platyrhynchos",
 output = "n_individuals",
 maxNumberDays = 5
)

# Specify start date via `day1`
camtrapR_detectionHistory(
  recordTable,
  camOp,
  species = "Anas platyrhynchos",
  output = "binary",
  day1 = "2020-06-22"
)

# Use a `buffer` of 2 days
camtrapR_detectionHistory(
 recordTable,
 camOp,
 species = "Anas platyrhynchos",
 output = "n_individuals",
 buffer = 2
)

# Multi-season detection history

# Create a multi-season camera operation matrix / record table
mica_sessions <- mica
mica_sessions$data$deployments$session <- c("2020", "2020", "2021", "2021")
mica_sessions$data$deployments$locationID <- c(
  mica_sessions$data$deployments$locationID[1:2],
  mica_sessions$data$deployments$locationID[1:2]
)
mica_sessions$data$deployments$locationName <- c(
  mica_sessions$data$deployments$locationName[1:2],
  mica_sessions$data$deployments$locationName[1:2]
)
delta <- lubridate::duration(2, units = "years")
mica_sessions$data$deployments$start[4] <- mica_sessions$data$deployments$start[4] + delta
mica_sessions$data$deployments$end[4] <- mica_sessions$data$deployments$end[4] + delta
mica_sessions$data$observations <- mica_sessions$data$observations \%>\%
dplyr::mutate(timestamp = dplyr::if_else(
  deploymentID \%in\% mica_sessions$data$deployments$deploymentID[4],
  timestamp + delta,
  timestamp
  )
)
mica_sessions$data$media <- mica_sessions$data$media \%>\%
dplyr::mutate(
 timestamp = dplyr::if_else(
 deploymentID \%in\% mica_sessions$data$deployments$deploymentID[4],
 timestamp + delta,
 timestamp
 )
)
camOp_sessions <- camtrapR_cameraOperation(mica_sessions, session_col = "session")
recordTable_sessions <- camtrapR_recordTable(mica_sessions)

# Create a multi-season detection history
camtrapR_detectionHistory(
  recordTable_sessions,
  camOp_sessions,
  species = "Anas platyrhynchos",
  output = "n_individuals",
  unmarkedMultFrameInput = TRUE
)
}
\seealso{
Other camtrapR-derived functions: 
\code{\link{camtrapR_cameraOperation}()},
\code{\link{camtrapR_recordTable}()}
}
